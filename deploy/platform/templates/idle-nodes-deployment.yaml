{{- $standardLabels := include "platform.labels.standard" . }}
{{- $appName := include "platform.name" . }}
{{- $priorityClassName := include "platform.idleJobs.priorityClass.name" . }}
{{- $jobsNamespace := include "platform.jobs.namespace.name" . }}
{{- $imagesPrepull := .Values.kubernetes.imagesPrepull }}
{{- range .Values.kubernetes.nodePools }}
{{- if gt (.idleSize | int) 0 }}
{{- $name := .name | replace "_" "-" | lower }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Release.Name }}-idle-nodes-{{ $name }}
  labels:
{{ $standardLabels | indent 4 }}
    component: idle-nodes
    node-pool: {{ $name | quote }}
spec:
  replicas: {{ .idleSize }}
  selector:
    matchLabels:
      app: {{ $appName }}
      release: {{ $.Release.Name }}
      component: idle-nodes
      node-pool: {{ $name | quote }}
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: {{ .idleSize }}
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ $appName }}
        release: {{ $.Release.Name }}
        component: idle-nodes
        node-pool: {{ $name | quote }}
    spec:
      containers:
      {{- if $imagesPrepull }}
      {{- if gt (len $imagesPrepull.images) 0 }}
      - name: images-prepull
        image: {{ $.Values.crictlImage.repository }}:{{ $.Values.crictlImage.tag }}
        command: [bash]
        args:
          - -c
          - |
            if [[ -f /run/dockershim.sock ]]
            then
              RUNTIME_ENDPOINT=unix:///run/dockershim.sock
            fi

            if [[ -f /run/containerd/containerd.sock ]]
            then
              RUNTIME_ENDPOINT=unix:///run/containerd/containerd.sock
            fi

            if [[ -f /run/crio/crio.sock ]]
            then
              RUNTIME_ENDPOINT=unix:///run/crio/crio.sock
            fi

            echo "pull interval: {{ $imagesPrepull.refreshInterval }}"

            while true
            do
              echo
              {{- range $imagesPrepull.images }}
              echo "$(date) - pulling image: {{ .image }}"
              crictl -r $RUNTIME_ENDPOINT pull {{ .image }} || true
              echo "$(date) - pulled image: {{ .image }}"
              {{- end }}

              sleep {{ $imagesPrepull.refreshInterval }}
            done
      {{- end }}
      {{- else }}
      - name: pause
        image: {{ $.Values.pauseImage.repository}}:{{ $.Values.pauseImage.tag }}
      {{- end }}
        resources:
          requests:
{{- if gt (.gpu | int) 0 }}
            cpu: "1"
            memory: 1Gi
            nvidia.com/gpu: {{ .gpu }}
{{- else }}
            cpu: {{ .cpu | quote }}
            memory: 1Gi
{{- end }}
          limits:
{{- if gt (.gpu | int) 0 }}
            cpu: "1"
            memory: 1Gi
            nvidia.com/gpu: {{ .gpu }}
{{- else }}
            cpu: {{ .cpu | quote }}
            memory: 1Gi
{{- end }}
        volumeMounts:
          - name: host-run
            mountPath: /run
      volumes:
      - name: host-run
        hostPath:
          path: /run
      priorityClassName: {{ $priorityClassName }}
      tolerations:
      - operator: Exists
        effect: NoSchedule
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ $.Values.kubernetes.labels.nodePool }}
                operator: In
                values:
                - {{ .name }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: {{ $.Values.jobs.label }}
                operator: Exists
            topologyKey: kubernetes.io/hostname
            namespaces:
            - {{ $jobsNamespace }}
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ $appName }}
              - key: release
                operator: In
                values:
                - {{ $.Release.Name }}
              - key: component
                operator: In
                values:
                - idle-nodes
            topologyKey: kubernetes.io/hostname
---
{{- end }}
{{- end }}
