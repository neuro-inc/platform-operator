name: CI

on:
  push:
    branches: [master]
    tags: ['v*.*.*']
  pull_request_target:
    branches: [master]

jobs:

  test:
    name: Run tests
    runs-on: ubuntu-latest
    env:
      HELM_VERSION: ${{ secrets.HELM_VERSION }}
    steps:
    - name: Checkout commit
      uses: actions/checkout@v2
    - name: Install python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Cache packages
      uses: actions/cache@v2.1.6
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-py-3.8-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('setup.cfg') }}
    - name: Install dependencies
      run: make setup
    - name: Lint
      run: |
        echo "::add-matcher::.github/actionlint-matcher.json"
        make lint
      env:
        CI_LINT_RUN: 1
    - name: Run unit tests
      run: make test_unit
    - name: Start minikube
      run: |
        curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        sudo install minikube-linux-amd64 /usr/local/bin/minikube
        sudo minikube start --kubernetes-version="1.20.9" --driver="none"
        sudo mv /root/.kube /root/.minikube $HOME
        sudo chown -R $USER $HOME/.kube $HOME/.minikube
        sed "s/root/home\/$USER/g" $HOME/.kube/config > tmp; mv tmp $HOME/.kube/config
    - name: Install helm
      run: |
        sudo apt -y install socat
        make helm_install
        helm init --wait
    - name: Run integration tests
      run: make test_integration

  release:
    name: Publish release
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    env:
      ARTIFACTORY_DOCKER_REPO: ${{ secrets.ARTIFACTORY_ANONYMOUS_DOCKER_REPO }}
      ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
      ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
      HELM_VERSION: ${{ secrets.HELM_VERSION }}
    steps:
    - name: Checkout commit
      uses: actions/checkout@v2
    - name: Login to Artifactory docker registry
      uses: docker/login-action@v1
      with:
        registry: ${{ secrets.ARTIFACTORY_ANONYMOUS_DOCKER_REPO }}
        username: ${{ secrets.ARTIFACTORY_USERNAME }}
        password: ${{ secrets.ARTIFACTORY_PASSWORD }}
    - name: Set env
      run: echo "TAG=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
    - name: Push image
      run: make docker_push
    - name: Install helm
      run: |
        make helm_install
        make helm_repo_add
    - name: Push chart to Artifactory
      run: make artifactory_helm_push
