{{- if .Values.acme.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-acme-certs
  labels: {{ include "platform.labels.standard" . | nindent 4 }}
    service: acme-certs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "platform.name" . }}
      release: {{ .Release.Name }}
      service: acme-certs
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: {{ include "platform.name" . }}
        release: {{ .Release.Name }}
        service: acme-certs
      annotations:
        checksum: {{ include (print $.Template.BasePath "/acme-certs-config-map.yaml") . | sha256sum }}
    spec:
      initContainers:
      - name: restore-certs
        {{- with .Values.bashImage }}
        image: {{ .repository}}:{{ .tag }}
        {{- end }}
        command: [bash]
        args:
        - -c
        - |
          certs_dir=/root/certs
          mkdir -p $certs_dir
          if [ "$(ls -A $certs_dir)" ]; then
            cp $certs_dir/* /var/certs/
          fi
        volumeMounts:
        - name: state
          mountPath: /root
        - name: certs
          mountPath: /var/certs
      containers:
      - name: acme
        {{- with .Values.bashImage }}
        image: {{ .repository}}:{{ .tag }}
        {{- end }}
        command: [bash]
        args:
        - -c
        - |
          apk add coreutils openssl socat curl

          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          mv kubectl /usr/local/bin/

          /var/acme/acme.sh install
          /var/acme/acme.sh issue \
            --server {{ .Values.acme.server }} \
            {{- range .Values.acme.domains }}
            --domain "{{ . }}" \
            {{- end }}
            {{- if .Values.acme.notify }}
            --notify {{ .Values.acme.notify }} \
            {{- end }}
            --secret {{ .Release.Name }}-ssl-cert \
            --secret-namespace {{ .Release.Namespace }} \
            &

          tail -f /dev/null
        {{- if .Values.acme.env}}
        env: {{ toYaml .Values.acme.env | nindent 8 }}
        {{- end }}
        resources:
          limits:
            cpu: 30m
            memory: 64Mi
        volumeMounts:
        - name: state
          mountPath: /root
        - name: certs
          mountPath: /var/certs
        - name: acme
          mountPath: /var/acme
      volumes:
      - name: acme
        configMap:
          name: {{ .Release.Name }}-acme-certs
          defaultMode: 0777
      - name: state
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-acme-certs
      - name: certs
        emptyDir: {}
{{- end }}
