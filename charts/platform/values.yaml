pauseImage:
  repository: ghcr.io/neuro-inc/pause
  tag: "3.0"

alpineImage:
  repository: ghcr.io/neuro-inc/alpine
  tag: latest

crictlImage:
  repository: ghcr.io/neuro-inc/crictl
  tag: "1.22.0"

kubectlImage:
  repository: ghcr.io/neuro-inc/kubectl
  tag: "1.16"

nginxImage:
  repository: ghcr.io/neuro-inc/nginx
  tag: latest

clusterName: ""

serviceToken: ""

nodePools: []

nodeLabels:
  nodePool: platform.neuromation.io/nodepool
  job: platform.neuromation.io/job

alertmanager:
  config: {}

inotify:
  maxInstances: 65536
  maxWatchers: 65536

nvidiaGpuDriver:
  enabled: false

  isGcp: false

  image:
    repository: ghcr.io/neuro-inc/k8s-device-plugin
    tag: 1.0.0-beta6

nvidiaDCGMExporter:
  enabled: false

  image:
    repository: ghcr.io/neuro-inc/dcgm-exporter
    tag: 1.7.2

imagesPrepull:
  refreshInterval: 1h
  images: []

dockerConfigSecret:
  create: false
  name: ""
  # credentials:
  #   url: https://gcr.io
  #   email: username@email.com
  #   username: username
  #   password: password


dockerHubConfigSecret:
  create: false
  name: ""
  # credentials:
  #   url: https://index.docker.io/v1/
  #   email: username@email.com
  #   username: username
  #   password: password

ingress:
  # host: default.org.neu.ro
  # jobFallbackHost: default.jobs-dev.neu.ro
  # registryHost: registry.default.org.neu.ro
  # ingressAuthHost: staging.neu.ro
  # minioHost: staging.neu.ro

  cors:
    originList: []
    originListRegex: []

jobs:
  namespace:
    create: true
    name: ""
  label: platform.neuromation.io/job

idleJobs: []

storages: []
# - type: kubernetes # nfs, gcs, azureFile
#   path:
#   size: 10Gi

#   storageClassName: ""

#   nfs:
#     server: nfs-server
#     path: /path

#   azureFile:
#     storageAccountName: storage-account-name
#     storageAccountKey: storage-account-key
#     shareName: share

#   gcs:
#     bucketName: bucket

# keda config
keda:
  operator:
    replicaCount: 1

keda-add-ons-http:
  interceptor:
    replicas:
      min: 1
      waitTimeout: 360s

  scaler:
    replicas: 1
# spark

spark-operator:
  replicas: 1

ssl:
  cert: ""
  key: ""

traefikEnabled: true
acmeEnabled: false
dockerRegistryEnabled: false
minioEnabled: false
platformReportsEnabled: true
appsPostgresOperatorEnabled: true
appsKedaEnabled: true
lokiEnabled: true
alloyEnabled: true
appsSparkOperatorEnabled: true

tags:
  gcp: false
  aws: false
  azure: false
  on_prem: false
